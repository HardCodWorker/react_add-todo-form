{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","todoUser","usersFromServer","find","cn","TodoList","todos","map","App","useState","setTitle","setUserId","todosFromServer","addedToDos","setAddedToDos","titleError","setTitleError","userError","setUserError","onSubmit","event","preventDefault","newToDo","Math","max","toDo","currenttoDos","type","value","placeholder","onChange","target","required","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.19823a67.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../Types/User';\n\ninterface Props {\n  user: User\n}\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../Types/Todo';\nimport usersFromServer from '../../api/users';\nimport { User } from '../../Types/User';\n\ninterface Props {\n  todo: Todo\n}\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const todoUser = usersFromServer.find(\n    (user: User) => user.id === todo.userId,\n  );\n\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n      {todoUser && <UserInfo user={todoUser} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../Types/Todo';\n\ninterface Props {\n  todos: Todo[]\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\n\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [addedToDos, setAddedToDos] = useState([...todosFromServer]);\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const clear = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setUserError(userId === 0);\n\n    setTitleError(!title);\n\n    if (userId !== 0 && title) {\n      const newToDo = {\n        id: Math.max(...addedToDos.map(toDo => toDo.id)) + 1,\n        title,\n        completed: false,\n        userId,\n      };\n\n      setAddedToDos(currenttoDos => [...currenttoDos, newToDo]);\n      clear();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        onSubmit={handleSubmit}\n      >\n\n        <label className=\"field\">\n          Title:&nbsp;\n          <input\n            type=\"text\"\n            value={title}\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            onChange={handleTitleChange}\n          />\n        </label>\n\n        { titleError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n\n        <div className=\"field\">\n          <label>\n            User:&nbsp;\n            <select\n              data-cy=\"userSelect\"\n              required\n              value={userId}\n              onChange={(event) => {\n                setUserId(+event.target.value);\n\n                setUserError(false);\n              }}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n\n              {usersFromServer.map(user => (\n                <option value={user.id} key={user.id}>{user.name}</option>\n              ))}\n            </select>\n          </label>\n\n          { userError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={addedToDos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}